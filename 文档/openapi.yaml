openapi: 3.0.0
info:
  title: 会员系统 API
  version: 1.0.0
  description: 会员系统前后端分离接口文档

servers:
  - url: http://localhost:8000

tags:
  - name: 用户
  - name: 会员
  - name: 卡密
  - name: 通知
  - name: 管理后台

paths:
  /api/register:
    post:
      tags: [用户]
      summary: 用户注册
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: 注册成功
        '400':
          description: 参数错误或邮箱已注册

  /api/login:
    post:
      tags: [用户]
      summary: 用户登录
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: 登录失败

  /api/membership:
    get:
      tags: [会员]
      summary: 获取当前用户会员信息
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 会员信息
          content:
            application/json:
              schema:
                type: object
                properties:
                  local:
                    type: object
                    properties:
                      expire_at:
                        type: string
                        format: date-time
                        example: 2025-01-01T00:00:00Z
                  online:
                    type: object
                    properties:
                      expire_at:
                        type: string
                        format: date-time
                        example: 2025-01-01T00:00:00Z
                      storage_total:
                        type: integer
                        example: 20

  /api/redeem:
    post:
      tags: [卡密]
      summary: 卡密兑换/续费
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: ABCD1234
      responses:
        '200':
          description: 兑换结果
        '400':
          description: 卡密无效或已使用

  /api/profile:
    get:
      tags: [用户]
      summary: 获取个人信息
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 个人信息

    put:
      tags: [用户]
      summary: 修改个人信息
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: newpassword123
      responses:
        '200':
          description: 修改成功

  /api/notifications:
    get:
      tags: [通知]
      summary: 获取系统通知列表
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 通知列表

  /api/notifications/{id}/read:
    put:
      tags: [通知]
      summary: 标记通知为已读
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 标记成功

  /api/admin/login:
    post:
      tags: [管理后台]
      summary: 管理员登录
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: admin123
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: 登录失败

  /api/admin/card-codes:
    post:
      tags: [管理后台]
      summary: 批量生成卡密
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                count:
                  type: integer
                  example: 10
                type:
                  type: string
                  example: both
                value:
                  type: integer
                  example: 365
      responses:
        '200':
          description: 生成的卡密列表

    get:
      tags: [管理后台]
      summary: 查询卡密列表
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 卡密列表

  /api/admin/card-codes/{code}/logs:
    get:
      tags: [管理后台]
      summary: 查询某个卡密的使用记录
      security:
        - bearerAuth: []
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 使用记录

  /api/admin/memberships:
    get:
      tags: [管理后台]
      summary: 查询会员列表
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 会员列表

  /api/admin/memberships/{user_id}:
    get:
      tags: [管理后台]
      summary: 查询某个用户的会员详情
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 会员详情

  /api/admin/memberships/{user_id}/renew:
    post:
      tags: [管理后台]
      summary: 管理员手动为用户续费/调整会员
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: online
                months:
                  type: integer
                  example: 12
                storage:
                  type: integer
                  example: 10
      responses:
        '200':
          description: 续费成功

  /api/admin/statistics:
    get:
      tags: [管理后台]
      summary: 获取数据统计
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 统计数据

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 